{"version":3,"sources":["serviceWorker.js","Header.js","utils/get_cookie.js","AddCard.js","ModalDelButtonForm.js","ModalEditButtonForm.js","BrokerageAccountsCard.js","BodyBrokerageAccounts.js","IssuersCard.js","BodyIssuers.js","RegionsCard.js","BodyRegions.js","Body.js","Footer.js","initialState.js","Mmvb.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","mainParent","currentPage","state","split","join","loginUrl","logoutUrl","Navbar","bg","expand","Brand","href","onClick","setState","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","Item","e","Divider","isLogin","Button","variant","userName","get_cookie","cookie_name","results","document","cookie","unescape","AddCard","props","cardData","addCardData","parent","handleShow","bind","handleClose","refForm","React","createRef","refErrors","formData","selects","fields","forEach","item","i","arr","name","value","type","url","initalState","formValidated","formErrors","showAddModal","me","this","Object","keys","fetch","then","response","status","json","resetState","data","data_item","push","new_selects","async_select_item","error","catch","ex","console","log","event","assign","target","formEl","current","checkValidity","errrors","formLength","length","elem","nodeName","toLowerCase","validity","valid","labels","htmlFor","textContent","validationMessage","map","key","FormData","append","method","headers","Accept","body","reload","fieldData","formControl","Form","Control","onChange","changeFormValues","placeholder","label","required","as","rows","options","Group","controlId","Label","renderField","Card","border","style","maxWidth","minWidth","marginBottom","Body","titleCard","Img","src","Modal","show","onHide","backdrop","closeButton","Title","titleForm","validated","ref","Text","Alert","Footer","handleSubmit","Component","ModalDelButtonForm","icon","data_parent","refFormFunc","element","showModal","margin","titleLink","cardName","ModalEditButtonForm","BrokerageAccountsCard","editWindowClose","editWindowShow","showEditModal","delFormData","editFormData","comment","Subtitle","region_name","marginRight","BodyBrokerageAccounts","initialState","cards","allCards","account","CardDeck","IssuersCard","regions","ogrn","site","BodyIssuers","issuer","RegionsCard","munitipal_name","administrative_name","okato_code","oktmo_code","postcode","state_uuid","BodyRegions","popoverAddRegionHelp","Popover","rel","region","OverlayTrigger","trigger","placement","overlay","Image","isLoaded","Mmvb","hash","first_name","items","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e34f3280.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\n// npm install react-bootstrap bootstrap\n// https://react-bootstrap.github.io/components/navs/\nimport Button from 'react-bootstrap/Button';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown  from 'react-bootstrap/NavDropdown';\n\n// https://react-bootstrap.github.io/getting-started/introduction/  -> Stylesheets\nimport './css/Bootstrap_4.3.1/bootstrap.css'\n\n\nfunction Header( {mainParent} ) {\n  let currentPage = mainParent.state.currentPage.split('');\n  if (currentPage[0] === \"#\") {\n    currentPage[0] = \"%23\"\n  }\n  currentPage = currentPage.join('');\n  const loginUrl = mainParent.state.loginUrl + '?next=/' + currentPage;\n  const logoutUrl = mainParent.state.logoutUrl + '?next=/' + currentPage;\n\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Navbar.Brand href=\"#home\" onClick={() => mainParent.setState({currentPage: \"#home\"})}>ММВБ Анализатор</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link  href=\"#home\" onClick={() => mainParent.setState({currentPage: \"#home\"})}>Главная</Nav.Link>\n          <Nav.Link href=\"#link\" onClick={() => mainParent.setState({currentPage: \"#link\"})}>Аналитика</Nav.Link>\n          <NavDropdown title=\"Управление данными\" id=\"basic-nav-dropdown\">\n            <NavDropdown.Item href=\"#issuers\" onClick={(e) => mainParent.setState({currentPage: \"#issuers\"})}>Эмитенты</NavDropdown.Item>\n            <NavDropdown.Item href=\"#regions\" onClick={(e) => mainParent.setState({currentPage: \"#regions\"})}>Регионы (субъекты РФ)</NavDropdown.Item>\n            <NavDropdown.Item href=\"#brokerage_accounts\" onClick={(e) => mainParent.setState({currentPage: \"#brokerage_accounts\"})}>Брокерские счета</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.2\" onClick={(e) => mainParent.setState({currentPage: \"#action/3.2\"})}>Ещё пункт меню</NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item href=\"#help\" onClick={(e) => mainParent.setState({currentPage: \"#help\"})}>Помощь</NavDropdown.Item>\n          </NavDropdown>\n        </Nav>\n        { !mainParent.state.isLogin && <Button variant=\"outline-success\" href={loginUrl}>Log In</Button>}\n        { mainParent.state.isLogin && <Navbar.Brand>Здравствуй {mainParent.state.userName}</Navbar.Brand>}\n        { mainParent.state.isLogin && <Button variant=\"outline-success\" href={logoutUrl}>Log Out</Button>}\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\n\n\nexport default Header;\n","function get_cookie(cookie_name) {\n  var results = document.cookie.match ( '(^|;) ?' + cookie_name + '=([^;]*)(;|$)' );\n  if ( results ) {\n    return ( unescape ( results[2] ) );\n  }\n  else {\n    return null;\n  }\n}\n\n\nexport default get_cookie;\n","import React from 'react';\n\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\n\n// https://react-bootstrap.github.io/getting-started/introduction/  -> Stylesheets\nimport './css/Bootstrap_4.3.1/bootstrap.css'\nimport './css/RequiredTrue.css'\nimport get_cookie from './utils/get_cookie'\n\n\nclass AddCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.cardData = props.addCardData;\n    this.mainParent = props.mainParent;\n    this.parent = props.parent;\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.refForm = React.createRef();\n    this.refErrors = React.createRef();\n    let formData = {};\n    let selects = {};\n    this.cardData.fields.forEach(function(item, i, arr) {\n      formData[item.name] = item.value;\n      if (item.type === \"select\") {\n        selects[item.name] = {'url': item.url, fields: item.fields, 'data': [{\"id\": \"\", \"name\": \"-\"}]}\n      }\n    });\n    this.initalState = {\n      formData: formData,\n      formValidated: false,\n      formErrors: '',\n      selects: selects,\n      showAddModal: false,\n    };\n    this.state = this.initalState;\n  }\n\n  componentDidMount() {\n    const me = this;\n    Object.keys(me.state.selects).forEach(function(item, i, arr) {\n      fetch(me.state.selects[item].url).then((response) => {\n        if (response.status !== 200) {\n          me.resetState();\n          return;\n        }\n        return response.json();\n      }).then((response) => {\n        if (response) {\n          let data = [{\"id\": \"\", \"name\": \"-\"}];\n          response.forEach(function(data_item, i, arr) {\n            data.push({\"id\": data_item[me.state.selects[item].fields.id], \"name\": data_item[me.state.selects[item].fields.name]});\n          });\n\n          let new_selects = {};\n          Object.keys(me.state.selects).forEach(function(async_select_item, i, arr) {\n            if (async_select_item === item) {\n              new_selects[item] = {\n                \"url\": me.state.selects[item].url,\n                \"fields\": me.state.selects[item].fields,\n                \"data\": data,\n              };\n            }\n            else {\n              new_selects[item] = {\n                \"url\": me.state.selects[item].url,\n                \"fields\": me.state.selects[item].fields,\n                \"data\": me.state.selects[item].data,\n              };\n            }\n          });\n          me.setState({selects: new_selects});\n        }\n      }).then((error) => {\n        if (error) {\n          me.resetState();\n          this.setState({error});\n        }\n      }).catch(function(ex) {\n        console.log('parsing failed', ex);\n        me.resetState();\n      })\n    });\n  }\n\n  changeFormValues(event) {\n    var formData = Object.assign({}, this.state.formData);\n    formData[event.target.id] = event.target.value;\n    this.setState({formData: formData});\n    const formEl = this.refForm.current;\n    if (formEl.checkValidity() === true) {\n      this.setState({formValidated: true, formErrors: ''});\n    }\n    else {\n      var errrors = [];\n      this.setState({formValidated: false});\n      const formLength = formEl.length;\n      for (let i = 0; i < formLength; i++) {\n        const elem = formEl[i];\n        if (elem.nodeName.toLowerCase() !== \"button\") {\n          if ((!elem.validity.valid) && (elem.labels.length)) {\n            errrors.push([elem.labels[0].htmlFor, elem.labels[0].textContent + ' - ' + elem.validationMessage]);\n          }\n        }\n      }\n      let formErrors = errrors.map((error) => <div key={error[0]}>{error[1]}</div>);\n      this.setState({formErrors: formErrors});\n    }\n  }\n\n  handleClose() {\n    this.setState(this.initalState);\n  }\n\n  handleShow() {\n    this.setState({ showAddModal: true });\n  }\n\n  handleSubmit(event) {\n    if (this.refForm.current.checkValidity() === true) {\n      const me = this;\n      var formData  = new FormData();\n      for(var name in this.state.formData) {\n        formData.append(name, this.state.formData[name]);\n      }\n\n      fetch(this.cardData.url,{\n        method: \"POST\",\n        headers: {\n          Accept: 'application/json',\n          'X-CSRFToken': get_cookie('csrftoken'),\n        },\n        body: formData,\n      })\n        .then((response) => {\n          if (response.status === 201) {\n            me.resetState();\n            me.parent.reload();\n            return;\n          }\n          else if (response.status === 400) {\n            return response.json();\n          }\n          return;\n        })\n        .then((response) => {\n          if (response) {\n            const keys = Object.keys(response);\n            let formErrors = keys.map((key) => <div key={key}>{response[key]}</div>);\n            this.setState({formErrors: formErrors, formValidated: false});\n          }\n          else {\n            me.resetState();\n          }\n        })\n        .then((error) => {\n          if (error) {\n            console.log('error', error);\n          }\n        })\n        .catch(function(ex) {\n          console.log('parsing failed', ex);\n          me.resetState();\n        })\n    }\n  }\n\n  renderField(fieldData) {\n    var formControl;\n    if (fieldData.type === 'text') {\n      formControl = (\n        <Form.Control\n          onChange={e => this.changeFormValues(e)}\n          placeholder={fieldData.placeholder || fieldData.label}\n          required={ fieldData.required || ''}\n          type=\"text\"\n          value={this.state.formData[fieldData.name]}\n        />\n      );\n    }\n    if (fieldData.type === 'url') {\n      formControl = (\n        <Form.Control\n          onChange={e => this.changeFormValues(e)}\n          placeholder={fieldData.placeholder || ''}\n          required={ fieldData.required || ''}\n          type=\"url\"\n          value={this.state.formData[fieldData.name]}\n        />\n      );\n    }\n    else if (fieldData.type === 'textarea') {\n      formControl = (\n        <Form.Control\n          onChange={e => this.changeFormValues(e)}\n          placeholder={fieldData.placeholder || fieldData.label}\n          required={ fieldData.required || ''}\n          as=\"textarea\"\n          rows={ fieldData.rows || \"3\" }\n          value={this.state.formData[fieldData.name]}\n        />\n      );\n    }\n    else if (fieldData.type === 'select') {\n      let options = this.state.selects[fieldData.name].data.map((data) => <option key={data['id']} value={data['id']}>{data[\"name\"]}</option>);\n      formControl = (\n        <Form.Control\n          onChange={e => this.changeFormValues(e)}\n          required={ fieldData.required || ''}\n          as=\"select\"\n        >\n          {options}\n        </Form.Control>\n      );\n    }\n\n    return (\n      <div key={fieldData.name}>\n        <Form.Group controlId={fieldData.name}>\n          <Form.Label className={ ( fieldData.required && \"required-true\" ) || \"\"}>{fieldData.label}</Form.Label>\n          {formControl}\n        </Form.Group>\n      </div>\n    )\n  }\n\n  resetState() {\n    this.setState(this.initalState);\n  }\n\n  render() {\n    const fields = this.cardData.fields.map((fieldData) => this.renderField(fieldData));\n    return (\n      <>\n        <Card border=\"primary\" style={{ maxWidth: '640px', minWidth: '290px', marginBottom: '10px' }}>\n          <Card.Body className=\"text-center\">\n            <Card.Link href={this.mainParent.state.currentPage} onClick={this.handleShow}>\n              <Card.Header>{this.cardData.titleCard}</Card.Header>\n              <Card.Img variant=\"null\" src=\"static/images/plus_01.gif\" />\n            </Card.Link>\n          </Card.Body>\n        </Card>\n\n        <Modal show={this.state.showAddModal} onHide={this.handleClose} backdrop='static'>\n          <Modal.Header closeButton>\n            <Modal.Title>{this.cardData.titleForm}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Form validated={this.state.formValidated} ref={this.refForm}>\n              {fields}\n              <Form.Text>\n                <Alert variant={ this.state.formValidated ? 'success' : 'danger' }>* Эти поля обязательны для заполнения.\n                <br />\n                <div ref={this.refErrors}>{this.state.formErrors}</div>\n                </Alert>\n              </Form.Text>\n            </Form>\n\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleClose}>\n              Закрыть не сохраняя\n            </Button>\n            <Button variant=\"primary\" onClick={e => this.handleSubmit(e)}>\n              Сохранить\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n\n\nexport default AddCard;\n","import React from 'react';\n\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\n\n// https://react-bootstrap.github.io/getting-started/introduction/  -> Stylesheets\nimport './css/Bootstrap_4.3.1/bootstrap.css'\nimport './css/RequiredTrue.css'\nimport get_cookie from './utils/get_cookie'\n\n\nclass ModalDelButtonForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.icon = props.icon;\n    this.formData = props.formData;\n    this.handleClose = this.handleClose.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n    this.data_parent = props.data_parent;\n    this.refForm = null;\n    this.refFormFunc = element => {\n      if (element) {\n        this.refForm = element;\n        if (this.refForm.checkValidity()) {\n          this.setState({formValidated: true, formErrors: ''});\n        }\n        else {\n          this.setState({formValidated: false});\n        }\n      }\n    };\n    this.initalState = {\n      formValidated: false,\n      formErrors: '',\n      showModal: false,\n    };\n    this.state = this.initalState;\n  }\n\n  handleClose() {\n    this.setState(this.initalState);\n  }\n\n  handleShow() {\n    this.setState({ showModal: true });\n  }\n\n  handleSubmit(event) {\n    if (this.refForm.checkValidity() === true) {\n      const me = this;\n      var formData  = new FormData();\n      formData.append('destroy_model_instance', true);\n\n      fetch(this.formData.url,{\n        method: \"POST\",\n        headers: {\n          Accept: 'application/json',\n          'X-CSRFToken': get_cookie('csrftoken'),\n        },\n        body: formData,\n      }).then((response) => {\n          if ( (response.status === 200) || (response.status === 204) ) {\n            me.data_parent.reload();\n            return;\n          }\n          else if (response.status === 400) {\n            return response.json();\n          }\n          return;\n      }).then((response) => {\n          if (response) {\n            const keys = Object.keys(response);\n            let formErrors = keys.map((key) => <div key={key}>{response[key]}</div>);\n            this.setState({formErrors: formErrors, formValidated: false});\n          }\n      }).then((error) => {\n          if (error) {\n            console.log('error', error);\n          }\n      }).catch(function(ex) {\n          console.log('parsing failed', ex);\n          me.resetState();\n      })\n    }\n  }\n\n  resetState() {\n    this.setState(this.initalState);\n  }\n\n  render() {\n    return (\n      <>\n        <button onClick={this.handleShow} style={{ margin: '3px' }}>{this.icon ? this.icon : ''}{this.formData.titleLink}</button>\n\n        <Modal show={this.state.showModal} onHide={this.handleClose} backdrop='static'>\n          <Modal.Header closeButton>\n            <Modal.Title>{this.formData.titleForm}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Form validated={this.state.formValidated} ref={this.refFormFunc}>\n                {this.formData.cardName}\n              <Form.Text>\n                <Alert variant='danger' show={!this.state.formValidated}>\n                <div ref={this.refErrors}>{this.state.formErrors}</div>\n                </Alert>\n              </Form.Text>\n            </Form>\n\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleClose}>\n              Отмена (не удалять)\n            </Button>\n            <Button variant=\"primary\" onClick={e => this.handleSubmit(e)}>\n              Удалить\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n\n\nexport default ModalDelButtonForm;\n","import React from 'react';\n\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\n\n// https://react-bootstrap.github.io/getting-started/introduction/  -> Stylesheets\nimport './css/Bootstrap_4.3.1/bootstrap.css'\nimport './css/RequiredTrue.css'\nimport get_cookie from './utils/get_cookie'\n\n\nclass ModalEditButtonForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.icon = props.icon;\n    this.formData = props.formData;\n    this.handleClose = this.handleClose.bind(this);\n    this.handleShow = this.handleShow.bind(this);\n    this.data_parent = props.data_parent;\n    this.refForm = null;\n    this.refFormFunc = element => {\n      if (element) {\n        this.refForm = element;\n        if (this.refForm.checkValidity()) {\n          this.setState({formValidated: true, formErrors: ''});\n        }\n        else {\n          this.setState({formValidated: false});\n        }\n      }\n    };\n    let formData = {};\n    let selects = {};\n    this.formData.fields.forEach(function(item, i, arr) {\n      formData[item.name] = item.value;\n      if (item.type === \"select\") {\n        selects[item.name] = {'url': item.url, fields: item.fields, 'data': [{\"id\": \"\", \"name\": \"-\"}]}\n      }\n    });\n    this.initalState = {\n      formData: formData,\n      formValidated: false,\n      formErrors: '',\n      selects: selects,\n      showModal: false,\n    };\n    this.state = this.initalState;\n  }\n\n  componentDidMount() {\n    const me = this;\n    Object.keys(me.state.selects).forEach(function(item, i, arr) {\n      fetch(me.state.selects[item].url).then((response) => {\n        if (response.status !== 200) {\n          me.resetState();\n          return;\n        }\n        return response.json();\n      }).then((response) => {\n        if (response) {\n          let data = [{\"id\": \"\", \"name\": \"-\"}];\n          response.forEach(function(data_item, i, arr) {\n            data.push({\"id\": data_item[me.state.selects[item].fields.id], \"name\": data_item[me.state.selects[item].fields.name]});\n          });\n\n          let new_selects = {};\n          Object.keys(me.state.selects).forEach(function(async_select_item, i, arr) {\n            if (async_select_item === item) {\n              new_selects[item] = {\n                \"url\": me.state.selects[item].url,\n                \"fields\": me.state.selects[item].fields,\n                \"data\": data,\n              };\n            }\n            else {\n              new_selects[item] = {\n                \"url\": me.state.selects[item].url,\n                \"fields\": me.state.selects[item].fields,\n                \"data\": me.state.selects[item].data,\n              };\n            }\n          });\n          me.setState({selects: new_selects});\n        }\n      }).then((error) => {\n        if (error) {\n          me.resetState();\n          this.setState({error});\n        }\n      }).catch(function(ex) {\n        console.log('parsing failed', ex);\n        me.resetState();\n      })\n    });\n  }\n\n  handleClose() {\n    this.setState(this.initalState);\n  }\n\n  handleShow() {\n    this.setState({ showModal: true });\n  }\n\n  changeFormValues(event) {\n    var formData = Object.assign({}, this.state.formData);\n    formData[event.target.id] = event.target.value;\n    this.setState({formData: formData});\n    const formEl = this.refForm;\n    if (formEl.checkValidity() === true) {\n      this.setState({formValidated: true, formErrors: ''});\n    }\n    else {\n      var errrors = [];\n      this.setState({formValidated: false});\n      const formLength = formEl.length;\n      for (let i = 0; i < formLength; i++) {\n        const elem = formEl[i];\n        if (elem.nodeName.toLowerCase() !== \"button\") {\n          if ((!elem.validity.valid) && (elem.labels.length)) {\n            errrors.push([elem.labels[0].htmlFor, elem.labels[0].textContent + ' - ' + elem.validationMessage]);\n          }\n        }\n      }\n      let formErrors = errrors.map((error) => <div key={error[0]}>{error[1]}</div>);\n      this.setState({formErrors: formErrors});\n    }\n  }\n\n  handleSubmit(event) {\n    if (this.refForm.checkValidity() === true) {\n      const me = this;\n      var formData  = new FormData();\n      for(var name in this.state.formData) {\n        formData.append(name, this.state.formData[name]);\n      }\n\n      fetch(this.formData.url,{\n        method: \"POST\",\n        headers: {\n          Accept: 'application/json',\n          'X-CSRFToken': get_cookie('csrftoken'),\n        },\n        body: formData,\n      }).then((response) => {\n          if ( (response.status === 200) || (response.status === 201) ) {\n            me.data_parent.reload();\n            return;\n          }\n          else if (response.status === 400) {\n            return response.json();\n          }\n          return;\n      }).then((response) => {\n          if (response) {\n            const keys = Object.keys(response);\n            let formErrors = keys.map((key) => <div key={key}>{response[key]}</div>);\n            this.setState({formErrors: formErrors, formValidated: false});\n          }\n      }).then((error) => {\n          if (error) {\n            console.log('error', error);\n          }\n      }).catch(function(ex) {\n          console.log('parsing failed', ex);\n          me.resetState();\n      })\n    }\n  }\n\n  renderField(fieldData) {\n    var formControl;\n    if (fieldData.type === 'pk') {\n      return;\n    }\n    if (fieldData.type === 'text') {\n      formControl = (\n        <Form.Control\n          onChange={e => this.changeFormValues(e)}\n          placeholder={fieldData.placeholder || fieldData.label}\n          required={ fieldData.required || ''}\n          type=\"text\"\n          value={this.state.formData[fieldData.name]}\n        />\n      );\n    }\n    if (fieldData.type === 'url') {\n      formControl = (\n        <Form.Control\n          onChange={e => this.changeFormValues(e)}\n          placeholder={fieldData.placeholder || ''}\n          required={ fieldData.required || ''}\n          type=\"url\"\n          value={this.state.formData[fieldData.name]}\n        />\n      );\n    }\n    else if (fieldData.type === 'textarea') {\n      formControl = (\n        <Form.Control\n          onChange={e => this.changeFormValues(e)}\n          placeholder={fieldData.placeholder || fieldData.label}\n          required={ fieldData.required || ''}\n          as=\"textarea\"\n          rows={ fieldData.rows || \"3\" }\n          value={this.state.formData[fieldData.name]}\n        />\n      );\n    }\n    else if (fieldData.type === 'select') {\n      let options = this.state.selects[fieldData.name].data.map((data) => <option key={data['id']} value={data['id']}>{data[\"name\"]}</option>);\n      formControl = (\n        <Form.Control\n          onChange={e => this.changeFormValues(e)}\n          required={ fieldData.required || ''}\n          as=\"select\"\n        >\n          {options}\n        </Form.Control>\n      );\n    }\n\n    return (\n      <div key={fieldData.name}>\n        <Form.Group controlId={fieldData.name}>\n          <Form.Label className={ ( fieldData.required && \"required-true\" ) || \"\"}>{fieldData.label}</Form.Label>\n          {formControl}\n        </Form.Group>\n      </div>\n    )\n  }\n\n  resetState() {\n    this.setState(this.initalState);\n  }\n\n  render() {\n    const fields = this.formData.fields.map((fieldData) => this.renderField(fieldData));\n    return (\n      <>\n        <button onClick={this.handleShow} style={{ margin: '3px' }}>{this.icon ? this.icon : ''}{this.formData.titleLink}</button>\n\n        <Modal show={this.state.showModal} onHide={this.handleClose} backdrop='static'>\n          <Modal.Header closeButton>\n            <Modal.Title>{this.formData.titleForm}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Form validated={this.state.formValidated} ref={this.refFormFunc}>\n              {fields}\n              <Form.Text>\n                <Alert variant={ this.state.formValidated ? 'success' : 'danger' }>* Эти поля обязательны для заполнения.\n                <br />\n                <div ref={this.refErrors}>{this.state.formErrors}</div>\n                </Alert>\n              </Form.Text>\n            </Form>\n\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={this.handleClose}>\n              Закрыть не сохраняя\n            </Button>\n            <Button variant=\"primary\" onClick={e => this.handleSubmit(e)}>\n              Сохранить\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n}\n\n\nexport default ModalEditButtonForm;\n","import React from 'react';\n\nimport Card from 'react-bootstrap/Card';\n\nimport ModalDelButtonForm from './ModalDelButtonForm';\nimport ModalEditButtonForm from './ModalEditButtonForm';\n\n\nclass BrokerageAccountsCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.currentPage = props.mainParent.state.currentPage;\n    this.data = props.data;\n    this.data_parent = props.parent;\n    this.editWindowClose = this.editWindowClose.bind(this);\n    this.editWindowShow = this.editWindowShow.bind(this);\n    this.initalState = {\n      showEditModal: false,\n      delFormData: {\n        \"titleLink\": \"Удалить\",\n        \"titleForm\": \"Удалить эмитента из БД\",\n        \"url\": this.data.url,\n        \"cardName\": this.data.name,\n      },\n      editFormData: {\n        \"titleLink\": \"Редактировать\",\n        \"titleForm\": \"Брокерский счёт\",\n        \"url\": this.data.url,\n        \"fields\": [\n          {\n            \"name\": \"name\",\n            \"label\": \"Название брокерского счёта\",\n            \"placeholder\": \"ИИС\",\n            \"required\": true,\n            \"type\": \"text\",\n            \"value\": this.data.name,\n          },\n          {\n            \"name\": \"comment\",\n            \"label\": \"Комментарий\",\n            \"required\": false,\n            \"type\": \"textarea\",\n            \"rows\": \"3\",  // only for textarea type\n            \"value\": this.data.comment,\n          },\n        ],\n      },\n\n    };\n    this.state = this.initalState;\n  }\n\n  editWindowClose() {\n    this.setState(this.initalState);\n  }\n\n  editWindowShow() {\n    this.setState({ showEditModal: true });\n  }\n\n  render() {\n    return (\n      <>\n        <Card border=\"secondary\" style={{ maxWidth: '640px', minWidth: '290px', marginBottom: '10px' }}>\n        <Card.Header>\n          <Card.Title>{this.data.name}</Card.Title>\n        </Card.Header>\n          <Card.Body>\n            <Card.Subtitle className=\"mb-2 text-muted\">Регион: {this.data.region_name}</Card.Subtitle>\n            <Card.Text>{this.data.comment}</Card.Text>\n          </Card.Body>\n          <Card.Footer className=\"text-muted\">\n            <ModalEditButtonForm\n              currentPage={this.currentPage}\n              icon={<Card.Img variant=\"null\" src=\"/static/images/icons/edit_32x32.gif\" style={{ marginRight: 5 }} />}\n              formData={this.state.editFormData}\n              data_parent={this.data_parent}\n            />\n            <ModalDelButtonForm\n              currentPage={this.currentPage}\n              icon={<Card.Img variant=\"null\" src=\"/static/images/icons/delete_32x32.gif\" style={{ marginRight: 5 }} />}\n              formData={this.state.delFormData}\n              data_parent={this.data_parent}\n            />\n          </Card.Footer>\n        </Card>\n      </>\n    );\n  }\n}\n\n\nexport default BrokerageAccountsCard;\n","import React from 'react';\n\nimport CardDeck from 'react-bootstrap/CardDeck';\n\nimport AddCard from './AddCard';\nimport BrokerageAccountsCard from './BrokerageAccountsCard';\n\n\nclass BodyBrokerageAccounts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mainParent = props.mainParent;\n    this.initialState = {cards: []};\n    this.state = this.initialState;\n  }\n\n  componentDidMount() {\n    this.reload();\n  }\n\n  reload() {\n    const me = this;\n    fetch(\"api/brokerage_accounts.json\").then((response) => {\n      if (response.status !== 200) {\n        me.resetState();\n        return;\n      }\n      return response.json()\n    }).then((response) => {\n      if (response) {\n        me.setState({cards: []});\n        me.setState({cards: response});\n      }\n    }).then((error) => {\n      if (error) {\n        me.resetState();\n        this.setState({error});\n      }\n    }).catch(function(ex) {\n      console.log('parsing failed', ex);\n      me.resetState();\n    });\n  }\n\n  resetState() {\n    this.setState(this.initialState);\n  }\n\n  render() {\n    const me = this;\n    const addCardData = {\n      \"titleCard\": \"Добавить брокерский счёт\",\n      \"titleForm\": \"Добавить новый брокерский счёт\",\n      \"url\": \"api/brokerage_accounts.json\",\n      \"fields\": [\n        {\n          \"name\": \"name\",\n          \"label\": \"Название брокерского счёта\",\n          \"placeholder\": \"ИИС\",\n          \"required\": true,\n          \"type\": \"text\",\n          \"value\": \"\",\n        },\n        {\n          \"name\": \"comment\",\n          \"label\": \"Комментарий\",\n          \"required\": false,\n          \"type\": \"textarea\",\n          \"rows\": \"3\",  // only for textarea type\n          \"value\": \"\",\n        },\n      ],\n    }\n\n    const allCards = this.state.cards.map((account) => <BrokerageAccountsCard key={account.url} data={account} mainParent={me.mainParent} parent={me}/>);\n\n    return (\n      <>\n        <CardDeck><AddCard key=\"add\" addCardData={addCardData} parent={me} mainParent={me.mainParent}/>{allCards}</CardDeck>\n      </>\n    );\n  }\n\n}\n\n\nexport default BodyBrokerageAccounts;\n","import React from 'react';\n\nimport Card from 'react-bootstrap/Card';\n\nimport ModalDelButtonForm from './ModalDelButtonForm';\nimport ModalEditButtonForm from './ModalEditButtonForm';\n\n\nclass IssuersCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.currentPage = props.mainParent.state.currentPage;\n    this.data = props.data;\n    this.data_parent = props.parent;\n    this.editWindowClose = this.editWindowClose.bind(this);\n    this.editWindowShow = this.editWindowShow.bind(this);\n    this.initalState = {\n      showEditModal: false,\n      delFormData: {\n        \"titleLink\": \"Удалить\",\n        \"titleForm\": \"Удалить эмитента из БД\",\n        \"url\": this.data.url,\n        \"cardName\": this.data.name,\n      },\n      editFormData: {\n        \"titleLink\": \"Редактировать\",\n        \"titleForm\": \"Редактировать эмитента\",\n        \"url\": this.data.url,\n        \"fields\": [\n          {\n            \"name\": \"name\",\n            \"label\": \"Название компании\",\n            \"placeholder\": 'ООО \"Компания\"',\n            \"required\": true,\n            \"type\": \"text\",\n            \"value\": this.data.name,\n          },\n          {\n            \"name\": \"regions\",\n            \"label\": \"Регион\",\n            \"fields\": {\"id\": \"url\", \"name\": \"munitipal_name\"},\n            \"required\": false,\n            \"type\": \"select\",\n            \"url\": \"api/region_fias.json?only_name=true\",\n            \"value\": this.data.regions,\n          },\n          {\n            \"name\": \"ogrn\",\n            \"label\": \"ОГРН\",\n            \"placeholder\": '1234567890123',\n            \"required\": false,\n            \"type\": \"text\",\n            \"value\": this.data.ogrn,\n          },\n          {\n            \"name\": \"site\",\n            \"label\": \"Сайт эмитента\",\n            \"required\": false,\n            \"type\": \"url\",\n            \"value\": this.data.site,\n          },\n          {\n            \"name\": \"comment\",\n            \"label\": \"Комментарий\",\n            \"required\": false,\n            \"type\": \"textarea\",\n            \"rows\": \"3\",  // only for textarea type\n            \"value\": this.data.comment,\n          },\n        ],\n      },\n\n    };\n    this.state = this.initalState;\n  }\n\n  editWindowClose() {\n    this.setState(this.initalState);\n  }\n\n  editWindowShow() {\n    this.setState({ showEditModal: true });\n  }\n\n  render() {\n    return (\n      <>\n        <Card border=\"secondary\" style={{ maxWidth: '640px', minWidth: '290px', marginBottom: '10px' }}>\n        <Card.Header>\n          <Card.Title>{this.data.name}</Card.Title>\n        </Card.Header>\n          <Card.Body>\n            <Card.Subtitle className=\"mb-2 text-muted\">Регион: {this.data.region_name}</Card.Subtitle>\n            <Card.Text>{this.data.comment}</Card.Text>\n          </Card.Body>\n          <Card.Footer className=\"text-muted\">\n            <ModalEditButtonForm\n              currentPage={this.currentPage}\n              icon={<Card.Img variant=\"null\" src=\"/static/images/icons/edit_32x32.gif\" style={{ marginRight: 5 }} />}\n              formData={this.state.editFormData}\n              data_parent={this.data_parent}\n            />\n            <ModalDelButtonForm\n              currentPage={this.currentPage}\n              icon={<Card.Img variant=\"null\" src=\"/static/images/icons/delete_32x32.gif\" style={{ marginRight: 5 }} />}\n              formData={this.state.delFormData}\n              data_parent={this.data_parent}\n            />\n          </Card.Footer>\n        </Card>\n      </>\n    );\n  }\n}\n\n\nexport default IssuersCard;\n","import React from 'react';\n\nimport CardDeck from 'react-bootstrap/CardDeck';\n\nimport AddCard from './AddCard';\nimport IssuersCard from './IssuersCard';\n\n\nclass BodyIssuers extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mainParent = props.mainParent;\n    this.initialState = {cards: []};\n    this.state = this.initialState;\n  }\n\n  componentDidMount() {\n    this.reload();\n  }\n\n  reload() {\n    const me = this;\n    fetch(\"api/issuers.json\").then((response) => {\n      if (response.status !== 200) {\n        me.resetState();\n        return;\n      }\n      return response.json()\n    }).then((response) => {\n      if (response) {\n        me.setState({cards: []});\n        me.setState({cards: response});\n      }\n    }).then((error) => {\n      if (error) {\n        me.resetState();\n        this.setState({error});\n      }\n    }).catch(function(ex) {\n      console.log('parsing failed', ex);\n      me.resetState();\n    });\n  }\n\n  resetState() {\n    this.setState(this.initialState);\n  }\n\n  render() {\n    const me = this;\n    const addCardData = {\n      \"titleCard\": \"Добавить эмитента\",\n      \"titleForm\": \"Добавить нового эмитента\",\n      \"url\": \"api/issuers.json\",\n      \"fields\": [\n        {\n          \"name\": \"name\",\n          \"label\": \"Название компании\",\n          \"placeholder\": 'ООО \"Компания\"',\n          \"required\": true,\n          \"type\": \"text\",\n          \"value\": \"\",\n        },\n        {\n          \"name\": \"regions\",\n          \"label\": \"Регион\",\n          \"fields\": {\"id\": \"url\", \"name\": \"munitipal_name\"},\n          \"required\": false,\n          \"type\": \"select\",\n          \"url\": \"api/region_fias.json?only_name=true\",\n          \"value\": \"\",\n        },\n        {\n          \"name\": \"ogrn\",\n          \"label\": \"ОГРН\",\n          \"placeholder\": '1234567890123',\n          \"required\": false,\n          \"type\": \"text\",\n          \"value\": \"\",\n        },\n        {\n          \"name\": \"site\",\n          \"label\": \"Сайт эмитента\",\n          \"required\": false,\n          \"type\": \"url\",\n          \"value\": \"\",\n        },\n        {\n          \"name\": \"comment\",\n          \"label\": \"Комментарий\",\n          \"required\": false,\n          \"type\": \"textarea\",\n          \"rows\": \"3\",  // only for textarea type\n          \"value\": \"\",\n        },\n      ],\n    }\n\n    const allCards = this.state.cards.map((issuer) => <IssuersCard key={issuer.url} data={issuer} mainParent={me.mainParent} parent={me}/>);\n\n    return (\n      <>\n        <CardDeck><AddCard key=\"add\" addCardData={addCardData} parent={me} mainParent={me.mainParent}/>{allCards}</CardDeck>\n      </>\n    );\n  }\n\n}\n\n\nexport default BodyIssuers;\n","import React from 'react';\n\nimport Card from 'react-bootstrap/Card';\n\nimport ModalDelButtonForm from './ModalDelButtonForm';\nimport ModalEditButtonForm from './ModalEditButtonForm';\n\n\nclass RegionsCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.currentPage = props.mainParent.state.currentPage;\n    this.data = props.data;\n    this.data_parent = props.parent;\n    this.editWindowClose = this.editWindowClose.bind(this);\n    this.editWindowShow = this.editWindowShow.bind(this);\n    this.initalState = {\n      showEditModal: false,\n      delFormData: {\n        \"titleLink\": \"Удалить\",\n        \"titleForm\": \"Удалить регион (субъект РФ) из БД\",\n        \"url\": this.data.url,\n        \"cardName\": this.data.munitipal_name,\n      },\n      editFormData: {\n        \"titleLink\": \"Редактировать\",\n        \"titleForm\": \"Редактировать новый регион (субъект РФ)\",\n        \"url\": this.data.url,\n        \"fields\": [\n          {\n            \"name\": \"munitipal_name\",\n            \"label\": \"Муниципальное название\",\n            \"placeholder\": \"Город Санкт-Петербург\",\n            \"required\": true,\n            \"type\": \"text\",\n            \"value\": this.data.munitipal_name,\n          },\n          {\n            \"name\": \"administrative_name\",\n            \"label\": \"Административное название\",\n            \"placeholder\": \"Санкт-Петербург город\",\n            \"required\": false,\n            \"type\": \"text\",\n            \"value\": this.data.administrative_name,\n          },\n          {\n            \"name\": \"okato_code\",\n            \"label\": \"Код ОКАТО\",\n            \"placeholder\": \"40000000000\",\n            \"required\": false,\n            \"type\": \"text\",\n            \"value\": this.data.okato_code,\n          },\n          {\n            \"name\": \"oktmo_code\",\n            \"label\": \"Код ОКТМО\",\n            \"placeholder\": \"40000000\",\n            \"required\": false,\n            \"type\": \"text\",\n            \"value\": this.data.oktmo_code,\n          },\n          {\n            \"name\": \"postcode\",\n            \"label\": \"Почтовый индекс\",\n            \"placeholder\": \"190000\",\n            \"required\": false,\n            \"type\": \"text\",\n            \"value\": this.data.postcode,\n          },\n          {\n            \"name\": \"state_uuid\",\n            \"label\": \"Уникальный номер в государственном адресном реестре\",\n            \"placeholder\": \"C2DEB16A-0330-4F05-821F-1D09C93331E6\",\n            \"required\": false,\n            \"type\": \"text\",\n            \"value\": this.data.state_uuid,\n          },\n          {\n            \"name\": \"comment\",\n            \"label\": \"Комментарий\",\n            \"required\": false,\n            \"type\": \"textarea\",\n            \"rows\": \"3\",  // only for textarea type\n            \"value\": this.data.comment,\n          },\n        ],\n      },\n\n    };\n    this.state = this.initalState;\n  }\n\n  editWindowClose() {\n    this.setState(this.initalState);\n  }\n\n  editWindowShow() {\n    this.setState({ showEditModal: true });\n  }\n\n  render() {\n    return (\n      <>\n        <Card border=\"secondary\" style={{ maxWidth: '640px', minWidth: '290px', marginBottom: '10px' }}>\n        <Card.Header>\n          <Card.Title>{this.data.munitipal_name}</Card.Title>\n        </Card.Header>\n          <Card.Body>\n            <Card.Subtitle className=\"mb-2 text-muted\">{this.data.administrative_name}</Card.Subtitle>\n            <Card.Text>{this.data.comment}</Card.Text>\n          </Card.Body>\n          <Card.Footer className=\"text-muted\">\n            <ModalEditButtonForm\n              currentPage={this.currentPage}\n              icon={<Card.Img variant=\"null\" src=\"/static/images/icons/edit_32x32.gif\" style={{ marginRight: 5 }} />}\n              formData={this.state.editFormData}\n              data_parent={this.data_parent}\n            />\n            <ModalDelButtonForm\n              currentPage={this.currentPage}\n              icon={<Card.Img variant=\"null\" src=\"/static/images/icons/delete_32x32.gif\" style={{ marginRight: 5 }} />}\n              formData={this.state.delFormData}\n              data_parent={this.data_parent}\n            />\n          </Card.Footer>\n        </Card>\n      </>\n    );\n  }\n}\n\n \nexport default RegionsCard;\n","import React from 'react';\n\nimport Button from 'react-bootstrap/Button';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport Image from 'react-bootstrap/Image';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\n\nimport AddCard from './AddCard';\nimport RegionsCard from './RegionsCard';\n\n\nclass BodyRegions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.mainParent = props.mainParent;\n    this.initialState = {cards: []};\n    this.state = this.initialState;\n  }\n\n  componentDidMount() {\n    this.reload();\n  }\n\n  reload() {\n    const me = this;\n    fetch(\"api/region_fias.json\")\n      .then((response) => {\n        if (response.status !== 200) {\n          me.resetState();\n          return;\n        }\n        return response.json()\n      })\n      .then((response) => {\n        if (response) {\n          me.setState({cards: []});\n          me.setState({cards: response});\n        }\n      })\n      .then((error) => {\n        if (error) {\n          me.resetState();\n          this.setState({error});\n        }\n      })\n      .catch(function(ex) {\n        console.log('parsing failed', ex);\n        me.resetState();\n      });\n  }\n\n  resetState() {\n    this.setState(this.initialState);\n  }\n\n  render() {\n    const me = this;\n\n    const addCardData = {\n      \"titleCard\": \"Добавить регион\",\n      \"titleForm\": \"Добавить новый регион (субъект РФ)\",\n      \"url\": \"api/region_fias.json\",\n      \"fields\": [\n        {\n          \"name\": \"munitipal_name\",\n          \"label\": \"Муниципальное название\",\n          \"placeholder\": \"Город Санкт-Петербург\",\n          \"required\": true,\n          \"type\": \"text\",\n          \"value\": \"\",\n        },\n        {\n          \"name\": \"administrative_name\",\n          \"label\": \"Административное название\",\n          \"placeholder\": \"Санкт-Петербург город\",\n          \"required\": false,\n          \"type\": \"text\",\n          \"value\": \"\",\n        },\n        {\n          \"name\": \"okato_code\",\n          \"label\": \"Код ОКАТО\",\n          \"placeholder\": \"40000000000\",\n          \"required\": false,\n          \"type\": \"text\",\n          \"value\": \"\",\n        },\n        {\n          \"name\": \"oktmo_code\",\n          \"label\": \"Код ОКТМО\",\n          \"placeholder\": \"40000000\",\n          \"required\": false,\n          \"type\": \"text\",\n          \"value\": \"\",\n        },\n        {\n          \"name\": \"postcode\",\n          \"label\": \"Почтовый индекс\",\n          \"placeholder\": \"190000\",\n          \"required\": false,\n          \"type\": \"text\",\n          \"value\": \"\",\n        },\n        {\n          \"name\": \"state_uuid\",\n          \"label\": \"Уникальный номер в государственном адресном реестре\",\n          \"placeholder\": \"C2DEB16A-0330-4F05-821F-1D09C93331E6\",\n          \"required\": false,\n          \"type\": \"text\",\n          \"value\": \"\",\n        },\n        {\n          \"name\": \"comment\",\n          \"label\": \"Комментарий\",\n          \"required\": false,\n          \"type\": \"textarea\",\n          \"rows\": \"3\",  // only for textarea type\n          \"value\": \"\",\n        },\n      ],\n    }\n\n    const popoverAddRegionHelp = (\n      <Popover id=\"popover-basic\" title=\"Полезная информация\" style={{ maxWidth: '75%' }}>\n        Данные о регионах необходимо брать на официальном сайте ФИАС.\n        Архив полной базы адресов <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://fias.nalog.ru/\"><strong>ФИАС</strong></a> весит 6 Гб,\n        поэтому её полная интеграция для домашнего использования признана нецелесообразной.\n      </Popover>\n    );\n    const HelpAddRegion = () => (\n      <div  className=\"row justify-content-end\" style={{ margin: '5px' }}>\n      <OverlayTrigger trigger=\"click\" placement=\"left\" overlay={popoverAddRegionHelp}>\n        <Button variant=\"light\"><Image src=\"static/images/icons/info_16x16.gif\" /></Button>\n      </OverlayTrigger>\n      </div>\n    );\n    const allCards = this.state.cards.map((region) => <RegionsCard key={region.url} data={region} mainParent={me.mainParent} parent={me}/>);\n\n    return (\n      <>\n        <HelpAddRegion />\n        <CardDeck><AddCard key=\"add\" addCardData={addCardData} parent={me} mainParent={me.mainParent}/>{allCards}</CardDeck>\n      </>\n    );\n  }\n\n}\n\n\nexport default BodyRegions;\n","import React from 'react';\n\nimport Alert from 'react-bootstrap/Alert';\n\nimport BodyBrokerageAccounts from './BodyBrokerageAccounts';\nimport BodyIssuers from './BodyIssuers';\nimport BodyRegions from './BodyRegions';\n\n\nfunction Body( {mainParent} ) {\n  if (mainParent.state.isLogin === true) {\n    if (mainParent.state.currentPage === \"#brokerage_accounts\") {\n      return <main className=\"container-fluid flex-grow-1\"><BodyBrokerageAccounts mainParent={mainParent} /></main>;\n    }\n    if (mainParent.state.currentPage === \"#issuers\") {\n      return <main className=\"container-fluid flex-grow-1\"><BodyIssuers mainParent={mainParent} /></main>;\n    }\n    if (mainParent.state.currentPage === \"#regions\") {\n      return <main className=\"container-fluid flex-grow-1\"><BodyRegions mainParent={mainParent} /></main>;\n    }\n  }\n\n  if ((mainParent.state.currentPage === \"#home\")  || (mainParent.state.currentPage === \"\")) {\n    return <main className=\"container-fluid flex-grow-1\"><BodyRegions mainParent={mainParent} /></main>;\n  }\n\n  return (<main className=\"container-fluid flex-grow-1\">\n      <Alert variant='danger'>Страница не найдена или не доступна. Возможно вы не авторизованы.</Alert>\n    </main>\n  );\n}\n\n\nexport default Body;\n","import React from 'react';\n\n// https://react-bootstrap.github.io/getting-started/introduction/  -> Stylesheets\nimport './css/Bootstrap_4.3.1/bootstrap.css'\n\n\nconst Footer = (\n  <footer className=\"blockquote-footer container-fluid\">\n    Создано <cite title=\"Иван Борисович Голубых\">Иваном Борисовичем Голубых</cite>, 2019.\n    Страница проекта <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/ivangolubykh/mmvb_accounting_backend\">тут</a>,\n    Лицензия: <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/ivangolubykh/mmvb_accounting_frontend/blob/master/LICENSE\">GNU GPL v3.0</a>.\n  </footer>\n)\n\n\nexport default Footer;\n","const initialState = {\n  currentPage: \"\",\n  isLoaded: false,\n  isLogin: false,\n  loginUrl: \"api-auth/login/\",\n  logoutUrl: \"api-auth/logout/\",\n  userName: \"\",\n};\n\n\nexport default initialState;\n","import React from 'react';\n\nimport Header from './Header';\nimport Body from './Body';\nimport Footer from './Footer';\nimport initialState from './initialState';\n\n// https://react-bootstrap.github.io/getting-started/introduction/  -> Stylesheets\nimport './css/Bootstrap_4.3.1/bootstrap.css'\n\n\nclass Mmvb extends React.Component {\n  constructor(props) {\n    super(props);\n    initialState[\"currentPage\"] = window.location.hash || '#home'\n    this.state = initialState;\n  }\n\n  resetState() {\n    this.setState(initialState);\n  }\n\n  componentDidMount() {\n    const me = this;\n    fetch(\"api/get_session_data/current.json\")\n      .then((response) => {\n        if (response.status !== 200) {\n          me.resetState();\n          return;\n        }\n        return response.json()\n      })\n      .then((response) => {\n        if (response) {\n          this.setState({isLoaded: true});\n          this.setState({isLogin: true});\n          this.setState({userName: response.first_name});\n          this.setState({items: response});\n        }\n      })\n      .then((error) => {\n        if (error) {\n          me.resetState();\n          this.setState({error});\n        }\n      })\n      .catch(function(ex) {\n        console.log('parsing failed', ex);\n        me.resetState();\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"d-flex flex-column min-vh-100\">\n        <Header mainParent={this} />\n        <Body mainParent={this} />\n        {Footer}\n      </div>\n    );\n  }\n}\n\n\nexport default Mmvb;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Mmvb from './Mmvb';\n\nReactDOM.render(<Mmvb />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}